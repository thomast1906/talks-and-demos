name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)

variables:
  - group: nottsdevops-develop

trigger: none

pool: linuxtamops

stages :
  - stage: validate
    jobs:
    - job: validate
      continueOnError: false
      steps:
      - task: TerraformInstaller@0
        displayName: 'install'
        inputs:
          terraformVersion: '0.13.4'
      - task: TerraformTaskV1@0
        displayName: 'init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'tamopstf'
          backendAzureRmResourceGroupName: 'tamopstfstates'
          backendAzureRmStorageAccountName: 'tfstatedevops'
          backendAzureRmContainerName: 'azuredevopsnotts'
          backendAzureRmKey: 'terraformdev.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
      - task: TerraformTaskV1@0
        displayName: 'validate'
        inputs:
          provider: 'azurerm'
          command: 'validate'
          
  # - stage: plan
  #   dependsOn: [validate]
  #   condition: succeeded('validate')
  #   jobs:
  #     - job: terraform_plan_develop
  #       steps:
  #             - checkout: self
  #             - task: TerraformInstaller@0
  #               displayName: 'install'
  #               inputs:
  #                 terraformVersion: '0.13.4'
  #             - task: TerraformTaskV1@0
  #               displayName: 'init'
  #               inputs:
  #                 provider: 'azurerm'
  #                 command: 'init'
  #                 backendServiceArm: 'tamopstf'
  #                 backendAzureRmResourceGroupName: 'tamopstfstates'
  #                 backendAzureRmStorageAccountName: 'tfstatedevops'
  #                 backendAzureRmContainerName: 'azuredevopsnotts'
  #                 backendAzureRmKey: 'terraformdev.tfstate'
  #                 workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
  #             - task: TerraformTaskV1@0
  #               displayName: 'plan'
  #               inputs:
  #                 provider: 'azurerm'
  #                 command: 'plan'
  #                 commandOptions: '-input=false -var-file="../vars/$(Environment)/$(Environment).tfvars"'
  #                 environmentServiceNameAzureRM: 'tamopstf'
  #                 workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
